import matplotlib.pyplot as plt
import math
import numpy as np
from matplotlib import font_manager


def preparing_figure(fig_title, x_label, y_label):
    fig, ax = plt.subplots()
    font = {'fontname': 'Times New Roman'}
    #ax.set_title(fig_title, **font, fontsize=30)

    # Подписи:
    ax.set_xlabel(x_label, **font, fontsize=52)
    ax.set_ylabel(y_label, **font, fontsize=55)
    plt.tick_params(axis='both', which='major', labelsize=44)


    # Сетка:
    ax.minorticks_on()
    ax.grid(which='major', axis='both')
    ax.grid(which='minor', axis='both', linestyle=':')

    fig.set_figheight(13)
    fig.set_figwidth(19)

    # Оси:
    #plt.yscale('log')
    #plt.xscale('log')

    # Легенда:
    # matplotlib.rcParams["legend.framealpha"] = 1
    return fig, ax


dependence = 'Time of k-th step $t_{k}$, $\mu s$'

title = 'b)'
x_label = dependence#r'$t_{sum} \, or \, N$'
y_label = r'Sensitivity A, $pT/\sqrt{Hz}$'
fig, ax = preparing_figure(title, x_label, y_label)
p = 0
approx = False


noiseless_a = {4.487021222602897e-08: 0.0191816511347026, 8.974042445205793e-08: 0.01898886582838398, 1.7948084890411587e-07: 0.01534532090776208, 3.5896169780823174e-07: 0.010850780473362274, 7.179233956164635e-07: 0.00863174301061617, 1.435846791232927e-06: 0.005425390236681137, 2.871693582465854e-06: 0.00383633022694052, 5.743387164931708e-06: 0.0027126951183405685, 1.1486774329863416e-05: 0.00191816511347026, 2.297354865972683e-05: 0.0013563475591702842, 4.594709731945366e-05: 0.00095908255673513, 9.189419463890733e-05: 0.0006781737795851421, 0.00018378838927781465: 0.000479541278367565}
single_a = {4.487021222602897e-08: 0.0191816511347026, 8.974042445205793e-08: 0.01898886582838398, 1.7948084890411587e-07: 0.01534532090776208, 3.5896169780823174e-07: 0.010850780473362274, 7.179233956164635e-07: 0.00863174301061617, 1.435846791232927e-06: 0.005425390236681137, 2.871693582465854e-06: 0.00383633022694052, 5.743387164931708e-06: 0.0027126951183405685, 1.1486774329863416e-05: 0.00191816511347026, 2.297354865972683e-05: 0.0013563475591702842, 4.594709731945366e-05: 0.0011988531959189125, 9.189419463890733e-05: 0.0008477172244814276, 0.00018378838927781465: 0.0007193119175513474}
q2_a = {4.487021222602897e-08: 0.013727887359288817, 8.974042445205793e-08: 0.013589915140365493, 1.7948084890411587e-07: 0.010982309887431053, 3.5896169780823174e-07: 0.007765665794494567, 7.179233956164635e-07: 0.0061775493116799675, 1.435846791232927e-06: 0.0038828328972472835, 2.871693582465854e-06: 0.0027455774718577633, 5.743387164931708e-06: 0.0019414164486236418, 1.1486774329863416e-05: 0.0013727887359288816, 2.297354865972683e-05: 0.0009707082243118209, 4.594709731945366e-05: 0.000857992959955551, 9.189419463890733e-05: 0.000606692640194888, 0.00018378838927781465: 0.0006005950719688857}
q3_a = {4.487021222602897e-08: 0.011208773092220268, 8.974042445205793e-08: 0.011096119247206363, 1.7948084890411587e-07: 0.008967018473776215, 3.5896169780823174e-07: 0.006340639569832207, 7.179233956164635e-07: 0.005043947891499121, 1.435846791232927e-06: 0.0031703197849161035, 2.871693582465854e-06: 0.0022417546184440537, 5.743387164931708e-06: 0.0015851598924580517, 1.1486774329863416e-05: 0.0011208773092220268, 2.297354865972683e-05: 0.0007925799462290259, 4.594709731945366e-05: 0.0007005483182637667, 9.189419463890733e-05: 0.0004953624663931412, 0.00018378838927781465: 0.0004203289909582601}
q4_a = {4.487021222602897e-08: 0.00993551543188695, 8.974042445205793e-08: 0.009835658471059192, 1.7948084890411587e-07: 0.00794841234550956, 3.5896169780823174e-07: 0.005620376269176682, 7.179233956164635e-07: 0.004470981944349127, 1.435846791232927e-06: 0.002810188134588341, 2.871693582465854e-06: 0.00198710308637739, 5.743387164931708e-06: 0.0014050940672941704, 1.1486774329863416e-05: 0.000993551543188695, 2.297354865972683e-05: 0.0008781837920588565, 4.594709731945366e-05: 0.0006209697144929344, 9.189419463890733e-05: 0.0005269102752353139, 0.00018378838927781465: 0.0005588727430436409}
q5_a = {4.487021222602897e-08: 0.008987011850824062, 8.974042445205793e-08: 0.008896687831250184, 1.7948084890411587e-07: 0.00718960948065925, 3.5896169780823174e-07: 0.005083821617857248, 7.179233956164635e-07: 0.004044155332870828, 1.435846791232927e-06: 0.002541910808928624, 2.871693582465854e-06: 0.0017974023701648125, 5.743387164931708e-06: 0.001270955404464312, 1.1486774329863416e-05: 0.0008987011850824062, 2.297354865972683e-05: 0.000635477702232156, 4.594709731945366e-05: 0.0004493505925412031, 9.189419463890733e-05: 0.000317738851116078, 0.00018378838927781465: 0.00022467529627060156}

lw = 5
markersize = 15

sensitivity = noiseless_a
step_delay = len(list(sensitivity.keys()))-5
x = [each*10**6 for each in list(sensitivity.keys())[step_delay:]]
y = [each*10**3 for each in list(sensitivity.values())[step_delay:]]
ax.plot(x, y, '.', c='#EE0000',ls='-', label=r'1 qub. simulator', lw=lw, markersize=markersize)

sensitivity = single_a
step_delay = len(list(sensitivity.keys()))-5
x = [each*10**6 for each in list(sensitivity.keys())[step_delay:]]
y = [each*10**3 for each in list(sensitivity.values())[step_delay:]]
ax.plot(x, y, 'd', c='#EE00BB',ls='-', label=r'1 qubit', lw=lw, markersize=markersize)

sensitivity = q2_a
step_delay = len(list(sensitivity.keys()))-5
x = [each*10**6 for each in list(sensitivity.keys())[step_delay:]]
y = [each*10**3 for each in list(sensitivity.values())[step_delay:]]
ax.plot(x, y, 'o', c='#2800EE',ls='-', label=r'2 qubits', lw=lw, markersize=markersize)

sensitivity = q3_a
step_delay = len(list(sensitivity.keys()))-5
x = [each*10**6 for each in list(sensitivity.keys())[step_delay:]]
y = [each*10**3 for each in list(sensitivity.values())[step_delay:]]
ax.plot(x, y, '^', c='#00E3EE',ls='-', label=r'3 qubits', lw=lw, markersize=markersize)

sensitivity = q4_a
step_delay = len(list(sensitivity.keys()))-5
x = [each*10**6 for each in list(sensitivity.keys())[step_delay:]]
y = [each*10**3 for each in list(sensitivity.values())[step_delay:]]
ax.plot(x, y, 's', c='#00EE33',ls='-', label=r'4 qubits', lw=lw, markersize=markersize)

sensitivity = q5_a
step_delay = len(list(sensitivity.keys()))-5
x = [each*10**6 for each in list(sensitivity.keys())[step_delay:]]
y = [each*10**3 for each in list(sensitivity.values())[step_delay:]]
ax.plot(x, y, 'p', c='#EEB500',ls='-', label=r'5 qubits', lw=lw, markersize=markersize)


font_2 = font_manager.FontProperties(family='Times New Roman', size=32)

#plt.legend(loc='best', prop=font_2)

#plt.show()
fig.savefig('materials_for_article\\sensit.pdf', dpi=500)
#fig.savefig('files_to_send\\' + str(user_id) + '.pdf', dpi=500)

plt.close()